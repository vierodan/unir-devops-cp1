pipeline {
    agent any

    stages {
	    stage('Stash files') {
            steps {
                stash includes: '**/*', name: 'sourceCode'
            }
        }
	    stage('Mock Build') {
            steps {
                echo 'Eyyy this is Python is not necessary to compile anything'
                bat '''
                    echo %WORKSPACE%
                    dir
                '''
            }
        }
		stage('Unit Tests') {
		    agent {
                label 'agt2'
            }
			steps {
				unstash 'sourceCode'
				bat '''
					hostname
					whoami
					echo %WORKSPACE%
				'''
				catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
					bat '''
						set PYTHONPATH=%WORKSPACE%
						pytest --junitxml=result-unit.xml test\\unit
					'''
				}
                stash includes: '*result*.xml', name: 'results_agent2'
			}
		}
		stage('Run Flask and Wiremok') {
			agent {
                label 'agt3'
            }
			steps {
				unstash 'sourceCode'
				bat '''
					hostname
					whoami
					echo env.WORKSPACE
				'''
				catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
					bat '''
						set PYTHONPATH=%WORKSPACE%
						set FLASK_APP=app\\api.py
						start flask run
						start java -jar C:\\avr\\wiremock\\wiremock-standalone-3.5.4.jar --port 9090 --root-dir test\\wiremock
						sleep(time: 10, unit: 'SECONDS')
						set PYTHONPATH=%WORKSPACE%
						pytest --junitxml=result-rest.xml test\\rest
					'''
				}
                stash includes: '*result*.xml', name: 'results_agent3'
			}
		}
        stage('Results') {
            steps {
                unstash 'results_agent2'
                unstash 'results_agent3'
                junit 'result*.xml'
                echo 'Finish'
            }
        }
    }
}